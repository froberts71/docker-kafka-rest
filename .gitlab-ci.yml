stages:
  - build
  - release

variables:
  KAFKA_REST_VERSION: '3.0.1'
  KAFKA_REST_VERSION_MAJOR: '3'
  KAFKA_REST_VERSION_MINOR: '0'
  KAFKA_REST_VERSION_PATCH: '1'

before_script:
  - if [ -n "${CI_BUILD_TOKEN}" ]; then docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY; fi

build:
  stage: build
  script:
    - if [ -z ${CI_REGISTRY_IMAGE+x} ]; then export CI_REGISTRY_IMAGE=`basename $CI_BUILD_REPO`; fi
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $KAFKA_REST_VERSION_MAJOR.$KAFKA_REST_VERSION_MINOR
    - if [ -n "${CI_BUILD_TOKEN}" ]; then docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME; fi

release:
  stage: release
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR.$KAFKA_REST_VERSION_MINOR.$KAFKA_REST_VERSION_PATCH
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR.$KAFKA_REST_VERSION_MINOR
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR.$KAFKA_REST_VERSION_MINOR.$KAFKA_REST_VERSION_PATCH
    - docker push $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR.$KAFKA_REST_VERSION_MINOR
    - docker push $CI_REGISTRY_IMAGE:$KAFKA_REST_VERSION_MAJOR
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master
